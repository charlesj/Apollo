#!/bin/bash
set -e

APOLLO_VERSION=0.1.2

PROJECT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
TOOLS_DIR=$PROJECT_DIR/tools
NUGET_EXE=$TOOLS_DIR/nuget.exe
XUNIT_VERSION=2.2.0-beta4-build3444
XUNIT_RUNNER_EXE=$PROJECT_DIR/packages/xunit.runner.console.$XUNIT_VERSION/tools/xunit.console.exe

RUN_INTEGRATION_SUITE=false
for var in "$@"
do
    if [ $var = "integrate" ]; then
      RUN_INTEGRATION_SUITE=true
    fi
done


# Verion file
if [ -f Apollo/Version.cs ]; then
    rm Apollo/Version.cs
fi

cp Apollo/Version_Template.cs Apollo/Version.cs
sed -i "s/%%version%%/$APOLLO_VERSION/g" Apollo/Version.cs
sed -i "s/%%commitHash%%/$(git rev-parse HEAD)/g" Apollo/Version.cs
sed -i "s/%%compiledOn%%/$(date -u +"%Y-%m-%dT%H:%M:%SZ")/g" Apollo/Version.cs


# Make sure the tools folder exist.
if [ ! -d "$TOOLS_DIR" ]; then
    mkdir "$TOOLS_DIR"
fi

# Download NuGet if it does not exist.
if [ ! -f "$NUGET_EXE" ]; then
    echo "Downloading NuGet..."
    curl -Lsfo "$NUGET_EXE" https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
    if [ $? -ne 0 ]; then
        echo "An error occured while downloading nuget.exe."
        exit 1
    fi
fi

mono "$NUGET_EXE" restore Apollo.sln
if [ $? -ne 0 ]; then
    echo "Could not restore NuGet packages."
    exit 1
fi

msbuild /p:Configuration=Release Apollo.sln

if [ "$RUN_INTEGRATION_SUITE" = true ]; then
    mono $XUNIT_RUNNER_EXE Apollo.Tests/bin/Release/Apollo.Tests.dll Apollo.IntegrationTests/bin/Release/Apollo.IntegrationTests.dll
else
    mono $XUNIT_RUNNER_EXE Apollo.Tests/bin/Release/Apollo.Tests.dll
fi
