global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL).
    ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    option  forwardfor
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend apolloproxy
    bind *:80
    {% if use_ssl %}
    redirect scheme https code 301 if !{ ssl_fc }
    bind {{ apollo_domain }}:443 ssl crt /etc/ssl/private/{{ apollo_domain}}.pem
    {% endif %}

    mode http
    acl api_request path_beg /api
    use_backend apolloserver if api_request
    default_backend apolloclient

backend apolloclient
    mode http
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    server apollocl01 localhost:5000 check

backend apolloserver
    option  forwardfor
    mode http
    http-request set-header Host localhost:8042
    {% if use_ssl %}
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    server apollo01 localhost:8042 check
    {% else %}
    server apollo01 localhost:8042
    {% endif %}


listen stats
    bind *:1936
    mode http
    stats enable
    stats hide-version
    stats uri /
